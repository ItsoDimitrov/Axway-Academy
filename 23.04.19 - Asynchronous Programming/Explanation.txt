01.AsynchronousCodeExample
-- Примерът показва нагледно какво представлява асинхронното програмиране. 
-- В случая цикълът е дълга операция и би замразила нашето приложение, ако не го направим да работи асинхронно. 
-- Докато цикълът минава през всички числа и чака да вземе желаното от нас, приложението не замръзва и дава на потребителя възможност да въведе нещо друго докато чака резултат
-- Нашата Main нишка чака докато нишката която сме създали работи на заден план .
-- При спиране на нашата Main нишка ( в случая с командата exit ), приложението спира да работи като новосъздадените от нас нишки освобождават.

02.RaceCondition
-- Race Condition се получава когато две или повече нишки се опитват да достъпят и променят споделени данни в едно и също време . 
-- Няма значение коя от новосъздадените нишки ще стартираме първо, защото операционната система решава на коя нишка да даде по голям приоритет при стартиране, а именно заради това не е сигурно кога ще се получи грешка ( както се вижда и в примера ) 
-- Ключовата дума "lock" дава достъп на само една нишка да достъпи споделената памет и това е един от начините да се избегне race condition
